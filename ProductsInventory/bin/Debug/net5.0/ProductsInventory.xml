<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProductsInventory</name>
    </assembly>
    <members>
        <member name="T:ProductsInventory.Controllers.ProductController">
            <summary>
            Product controller
            </summary>
        </member>
        <member name="M:ProductsInventory.Controllers.ProductController.#ctor(DukkanTek.Services.Product.IProductService)">
            <summary>
            constructor
            </summary>
            <param name="productService"></param>
        </member>
        <member name="M:ProductsInventory.Controllers.ProductController.ProductCount">
            <summary>
            Returns count of instock,damaged and sold products.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProductsInventory.Controllers.ProductController.Post(DukkanTek.Domain.DTOs.OrderRequest)">
            <summary>
            post an order
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:ProductsInventory.Controllers.ProductController.Put(System.Int32,DukkanTek.Domain.DTOs.ProductStatusRequest)">
            <summary>
            modify product status
            </summary>
            <param name="id"></param>
            <param name="productStatusRequest"></param>
            <returns></returns>
        </member>
        <member name="T:ProductsInventory.Core.RemoveVersionFromParameter">
            <summary>
            Filter that Implements IOperationFilter
            </summary>
        </member>
        <member name="M:ProductsInventory.Core.RemoveVersionFromParameter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Apply filter
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:ProductsInventory.Core.ReplaceVersionWithExactValueInPath">
            <summary>
            Filter ReplaceVersionWithExactValueInPath
            </summary>
        </member>
        <member name="M:ProductsInventory.Core.ReplaceVersionWithExactValueInPath.Apply(Microsoft.OpenApi.Models.OpenApiDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            Apply filter
            </summary>
            <param name="swaggerDoc"></param>
            <param name="context"></param>
        </member>
        <member name="T:ProductsInventory.IdentityServerConfig">
            <summary>
            
            </summary>
        </member>
        <member name="F:ProductsInventory.IdentityServerConfig.ApiName">
            <summary>
            API Name
            </summary>
        </member>
        <member name="F:ProductsInventory.IdentityServerConfig.ApiFriendlyName">
            <summary>
            API Friendly Name
            </summary>
        </member>
        <member name="F:ProductsInventory.IdentityServerConfig.QuickAppClientID">
            <summary>
            Quick App ClientID
            </summary>
        </member>
        <member name="F:ProductsInventory.IdentityServerConfig.SwaggerClientID">
            <summary>
            Swagger ClientID
            </summary>
        </member>
        <member name="M:ProductsInventory.IdentityServerConfig.GetIdentityResources">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProductsInventory.IdentityServerConfig.GetApiResources">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProductsInventory.IdentityServerConfig.GetClients">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProductsInventory.IdentityServerConfig.GetApiScopes">
            <summary>
            Api Scopes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ProductsInventory.ClaimConstants">
            <summary>
            Claim constants
            </summary>
        </member>
        <member name="F:ProductsInventory.ClaimConstants.Subject">
            <summary>A claim that specifies the subject of an entity</summary>
        </member>
        <member name="F:ProductsInventory.ClaimConstants.Permission">
            <summary>A claim that specifies the permission of an entity</summary>
        </member>
        <member name="T:ProductsInventory.ScopeConstants">
            <summary>
            Scope constants
            </summary>
        </member>
        <member name="F:ProductsInventory.ScopeConstants.Roles">
            <summary>A scope that specifies the roles of an entity</summary>
        </member>
        <member name="T:ProductsInventory.Program">
            <summary>
            Program .cs
            </summary>
        </member>
        <member name="M:ProductsInventory.Program.Main(System.String[])">
            <summary>
             Main method
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:ProductsInventory.Program.CreateHostBuilder(System.String[])">
            <summary>
            host builder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:ProductsInventory.Seed.IDatabaseInitializer">
            <summary>
            IDatabaseInitializer
            </summary>
        </member>
        <member name="M:ProductsInventory.Seed.IDatabaseInitializer.SeedAsync">
            <summary>
            SeedAsync
            </summary>
            <returns></returns>
        </member>
        <member name="T:ProductsInventory.Seed.DatabaseInitializer">
            <summary>
            Database initializer and seeding class 
            </summary>
        </member>
        <member name="M:ProductsInventory.Seed.DatabaseInitializer.#ctor(Infrastructure.Data.ApplicationDbContext,Microsoft.Extensions.Logging.ILogger{ProductsInventory.Seed.DatabaseInitializer},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole})">
            <summary>
            DatabaseInitializer
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
            <param name="userManager"></param>
            <param name="roleManager"></param>
        </member>
        <member name="M:ProductsInventory.Seed.DatabaseInitializer.SeedAsync">
            <summary>
            SeedAsync
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
